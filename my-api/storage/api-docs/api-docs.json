{
    "openapi": "3.0.0",
    "info": {
        "title": "My API Test",
        "description": "This is a simple API documentation for user management",
        "contact": {
            "email": "edwardtua25@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "description": "To get all data users",
                "operationId": "a36f787a8c03e14116b60c9009baa944",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of users"
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add a new user",
                "description": "For create new user",
                "operationId": "c70c18636cb91d835fcc23025f48febe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "age": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created user"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "description": "Get data user by ID",
                "operationId": "8242536d482e67ca1a4607f836f473fe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user by ID",
                "description": "Update data user by ID, where ID exits",
                "operationId": "0db704ef59e3e851951556698d0a5a8b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "age": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated user"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user by ID",
                "description": "Delete user by ID",
                "operationId": "a0ce91d753f85c9a3caee8c136d70e4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted user"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "User",
            "description": "User"
        }
    ]
}